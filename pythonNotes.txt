Large collection of python notes.
  Jupyter Notebook
    type its name in command prompt opens jupyter notebook

  Ctrl+Alt+N
    Runs code in vscode with Code Runner Extension

  Basic Practice:
    http://codingbat.com/python
  More Mathematical (and Harder) Practice:
    https://projecteuler.net/archives
  List of Practice Problems:
    http://www.codeabbey.com/index/task_list
  A SubReddit Devoted to Daily Practice Problems:
    https://www.reddit.com/r/dailyprogrammer
  A very tricky website with very few hints and touch problems (Not for beginners but still interesting)
    http://www.pythonchallenge.com/

  py -3 -m venv [folderName]
    Creates Virtual Environment
    -3 is version of python
    -m is module you want to install
      venv virtual Environment
    [folderName is the name of the folder you want to create]

  requirements.txt
    a list of dependencies application will need to function properly
      (similar to package.json)
    pip install -r requirements.txt
      installs all the dependencies. (similar to npm install command)

  # are comments

  print("something")
    prints to console.

  type()
    gets the data type of whatever you pass into the method

    NoneType is none (absence of value)



Strings are immutable
  you can't use indexing to change individual elements of a string
  String objects do not support item assignment.
  Dont support item assignment.

  Immutability is when you cannot change the object itself when manipulating it.
    You would have to create another object with the changes.

  # are comments

  a = "string"

  a[::-1]
    reverses the string
    "gnirts"

  a[1:]
    after first char to end of the world
    #tring

  # String multiplication
  letter = 'z'

  letter * 10
    # 'zzzzzzzzzz'

  #string formatting
  .format()
  f-strings

  n = "Yael"
  print('Hello, my name is {}'.format(n))

  # Hello, my name is Yael


  # formatting floating point numbers
  # float formatting follows "{value:width.precision f}"
  # width is the whitespace
  #   https://pyformat.info/

  result = 100/777
  print(result)
  print("The result was {r:1.3f}".format(r=result))
    0.1287001287001287
    The result was 0.129

  # f strings
  print(f'Hello, his name is {n}'')



Lists (arrays in python)
  support indexing and
  lists are mutable
  supports multidemensional arrays
  can have multiple object types

  # can concatenate lists

  l1 = ['one', 'two', 'three']
  l2 = ['four', 'five', 'six']
  l1 + l2

  ['one', 'two', 'three', 'four', 'five', 'six']

  # add to end of list. Similar to .push in js
  l1.append('addition')

  # pop, removes items from the end of the list and returns that object
  # by default index location is -1
  l1.pop()
  popped_item = l1.pop()
  popped_item

  # sorting is done by .sort() (like js)
  # does not return a list, just sorts it in the current lists

  # reversing is done by .reverse() (like js)
  # does not return a list



Dictionaries
  Are objects retrieved by key name
    (lists are retrieved by index position)
  Are mutable like Lists
  Unordered and cannot be sorted
  Formatting is similar to json
  Can support multidemensional dictionaries

  ordereddict object can support sorting in dictionaries.

  # calling items in dict
  newDict = {"a": 1, "b": 2}

  newDict["a"]
    1



Tuples
  Similar to lists but are immutable.
    Once element inside of a tuple it, cannot be reassigned.
    tuple object does not support item assignment
  uses parenthesis
  You won't use tuples often
    You use tuples for when you pass around objects in your program that you don't want to get accidentally changed.
    Data integrity
  Does not have a lot of methods for tuples


  t[0]
    calls first value of tuple. Similar to list/(arrays in js)
  t.count('val')
    counts how many times 'val' appears in tuple.



Sets
  unorder collections of unique elements
  similar to arrayLists in Java.



Booleans
  first letter of True or False has to be capitalize



FileIO
  %%write myfile.txt
    writes a text file with jupyter notebook

  open('[path]')
    opens file
    (does not work with extension, use python filename.py command)
    provide full file path to open a file somewhere else on your system.
  open('[path]',mode='val')
    mode='r' - read only
    mode='w' - write only
    mode='a' - append only
    mode='r+' - reading and writing
    mode='w+' - writing and reading (overwrites exisiting files or creates a new file)

  f.ready()
    Returns output of the file.
  f.seek(0)
    resets the read cursor to beginning of the file
  f.readlines()
    creates a list with each line on the list.

  f.close()
    closes file so you don't get errors elsewhere in your operating system.

  f.write()
    writes to the file
    cursor is at the end of the document

  with
    with keyword is like define? but does not define a method?



Comparison operatiors
  Same as javascript except with out ===
  == is the same as js ===



Logical operatiors
  and keyword instead of &&
  or keyword instead of ||
  not keyword negates the comparison operator
    (not 1 == 1) is equal to (1 != 1)

